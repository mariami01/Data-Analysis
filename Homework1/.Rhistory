vec_c <- c(-1, 3, -5, 7, -9)
vec_c_repeat <- rep(vec_c, each = 10)
vec_c_sorted <- sort(vec_c_repeat, decreasing = TRUE)
#d. Create and store a vector that contains, in any configuration, the
#following:
#i. A sequence of integers from 6 to 12 (inclusive)
#ii. A threefold repetition of the value 5.3
#iii. The number âˆ’3
#iv. A sequence of nine values starting at 102 and ending at the
#number that is the total length of the vector created in (c)
vec_d <- c(seq(from = 6, to = 12), rep(5.3, times = 3), -3, seq(from = 102, to = length(vec_c_repeat), length.out = 9))
#e. Confirm that the length of the vector created in (d) is 20.
length(vec_d) == 20
vec_a <- c(seq(3,6, length.out =5))
source("~/Documents/UNI(Senior)/R Analysis/Homework1/Task02.R", echo=TRUE)
source("~/Documents/UNI(Senior)/R Analysis/Homework1/Task02.R", echo=TRUE)
source("~/Documents/UNI(Senior)/R Analysis/Homework1/Task02.R", echo=TRUE)
source("~/Documents/UNI(Senior)/R Analysis/Homework1/Task02.R", echo=TRUE)
vec_a
first_last
vec_a
first_last
first_last
#c. Store as a third object the values returned by omitting the first
first_last
#c. Store as a third object the values returned by omitting the first
#f. Use the colon operator as an index vector to reverse the order
#f. Use the colon operator as an index vector to reverse the order
#f. Use the colon operator as an index vector to reverse the order
#f. Use the colon operator as an index vector to reverse the order
#f. Use the colon operator as an index vector to reverse the order
#f. Use the colon operator as an index vector to reverse the order
#f. Use the colon operator as an index vector to reverse the order
#f. Use the colon operator as an index vector to reverse the order
vec_a <- c(seq(3,6, length.out =5), rep(c(2,-5.1,-33), time=2), 7, 42+2)
first_last  <-  c(vec_a[0], vec_a[length(vec_a)])
first_last
#c. Store as a third object the values returned by omitting the first
first_last  <-  c(vec_a[1], vec_a[length(vec_a)])
omit_first_last
#f. Use the colon operator as an index vector to reverse the order
#g. Create a vector from (c) that repeats the third element of (c)
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#c. Store as a third object the values returned by omitting the first
#and last values of your vector from (a).
omit_first_last <- vec_a[-c(vec_a[1], length(vec_a))]
omit_first_last
vec_reconstruct
#f. Use the colon operator as an index vector to reverse the order
#g. Create a vector from (c) that repeats the third element of (c)
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
#h. Create a new vector as a copy of (e) by assigning (e) as is to a
#newly named object. Using this new copy of (e), overwrite the
#first, the fifth to the seventh (inclusive), and the last element with
#the values 99 to 95 (inclusive), respectively.
first_last  <-  c(vec_a[1], vec_a[length(vec_a)])
#c. Store as a third object the values returned by omitting the first
#and last values of your vector from (a).
omit_first_last <- vec_a[-c(vec_a[1], length(vec_a))]
omit_first_last
vec_reconstruct <- c(first_last,omit_first_last )
vec_reconstruct
vec_reconstruct <- c(first_last,omit_first_last, last = vec_a[length(vec_a)] )
vec_reconstruct
vec_a
#e. Overwrite (a) with the same values sorted from smallest to largest.
vec_a <-  sort(vec_a)
vec_a
identical
#c. Store as a third object the values returned by omitting the first
#and last values of your vector from (a).
omit_first_last <- vec_a[-c(vec_a[1], length(vec_a))]
omit_first_last
#f. Use the colon operator as an index vector to reverse the order
# of (e), and confirm this is identical to using sort on (e) with decreasing=TRUE.
vec_a_rev <- vec_a[length(vec_a):1]
identical(vec_a_rev, sort(vec_a, decreasing = TRUE))
identical
identical(vec_a_rev, sort(vec_a, decreasing = TRUE))
identical
vec_g
vec_g
#g. Create a vector from (c) that repeats the third element of (c)
#three times, the sixth element four times, and the last element once.
vec_g <- c(rep(omit_first_last[3], times=3), rep(omit_first_last[6], times=4), rep(omit_first_last[length(omit_first_last)])
#g. Create a vector from (c) that repeats the third element of (c)
#three times, the sixth element four times, and the last element once.
vec_g <- c(rep(omit_first_last[3], times=3), rep(omit_first_last[6], times=4), romit_first_last[length(omit_first_last)])
vec_g
vec_g
#g. Create a vector from (c) that repeats the third element of (c)
#three times, the sixth element four times, and the last element once.
vec_g <- c(rep(omit_first_last[3], times=3), rep(omit_first_last[6], times=4), omit_first_last[length(omit_first_last)])
vec_g
vec_g <- vec_a
vec_g[c(1, 5:7, length(vec_a))] <- c(95, 99)
vec_g[c(1, 5:7, length(vec_a))] <- c(99, 98, 97, 96, 95)
