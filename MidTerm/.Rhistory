data
getwd()
data <- read.csv("fl_student_survey.csv")
data
prop_life_after_death
data
# calculate the proportion of students who have Life after death
prop_life_after_death <- mean(data$life_after_death == "y")
prop_life_after_death
# error
se_prop_life_after_death <- sqrt(prop_life_after_death * (1 - prop_life_after_death) / nrow(data))
se_prop_life_after_death
getwd()
data <- read.csv("fl_student_survey.csv")
data
# calculate the proportion of students who have Life after death
prop_life_after_death <- mean(data$life_after_death == "y")
prop_life_after_death
# error
se_prop_life_after_death <- sqrt(prop_life_after_death * (1 - prop_life_after_death) / nrow(data))
se_prop_life_after_death
# calculate the critical value
cv <- qt(0.975, nrow(data) - 1, lower.tail = FALSE)
# calculate the margin of error
me_prop_life_after_death <- cv * se_prop_life_after_death
# calculate the confidence interval
ci_prop_life_after_death <- c(prop_life_after_death - me_prop_life_after_death,
prop_life_after_death + me_prop_life_after_death)
# calculate the length of the confidence interval
length_ci_prop_life_after_death <- diff(ci_prop_life_after_death)
length_ci_prop_life_after_death
getwd()
data <- read.csv("fl_student_survey.csv")
data
# Calculate the proportion of students who have life after death
prop_life_after_death <- sum(data$life_after_death == "y")/nrow(data)
# Print the proportion
cat("Proportion of students who have life after death:", prop_life_after_death, "\n")
# Calculate the length of the 95% confidence interval
z_value <- qnorm(0.975) # 0.975 = (1 + 0.95)/2
length_ci <- z_value * sqrt((prop_life_after_death*(1-prop_life_after_death))/nrow(data))
# Print the length of the confidence interval
cat("Length of the 95% confidence interval:", length_ci)
n <- nrow(data)
p <- sum(data$abortion_legalize == "y")/n
# the critical value for a 95% level of confidence
df <- n - 1
alpha <- 0.05
cv <- qt(1 - alpha/2, df)
# the standard error
se <- sqrt(p*(1-p)/n)
# the length of the confidence interval
ci_length <- cv * se
# the result
ci_length
# subset the data to include only the rows where abortion_legalize is "y"
subset_data <- subset(data, abortion_legalize == "y")
# calculate the sample proportion of students who agree with abortion and the sample size
p_hat <- mean(subset_data$abortion_legalize == "y")
n <- nrow(subset_data)
# set the desired confidence level (e.g. 95%)
conf_level <- 0.90
# calculate the critical value of the standard normal distribution
z_critical <- qnorm((1 + conf_level) / 2)
# calculate the length of the confidence interval
interval_length <- z_critical * sqrt(p_hat * (1 - p_hat) / n)
# print the result
cat("Length of the", conf_level * 100, "% confidence interval:", round(interval_length, 2))
# subset the data to include only the rows where abortion_legalize is "y"
subset_data <- subset(data, abortion_legalize == "y")
# calculate the sample proportion of students who agree with abortion and the sample size
p_hat <- mean(subset_data$abortion_legalize == "y")
n <- nrow(subset_data)
# set the desired confidence level (e.g. 95%)
conf_level <- 0.95
# calculate the critical value of the standard normal distribution
z_critical <- qnorm((1 + conf_level) / 2)
# calculate the length of the confidence interval
interval_length <- z_critical * sqrt(p_hat * (1 - p_hat) / n)
# print the result
cat("Length of the", conf_level * 100, "% confidence interval:", round(interval_length, 2))
# Filter the dataset to only include rows where abortion_legalize is "y"
abortion_data <- subset(data, abortion_legalize == "y")
# Calculate the proportion of students who agree with abortion
p <- mean(abortion_data$abortion_legalize == "y")
# Set the desired level of confidence
confidence_level <- 0.9
# Calculate the z-score for the desired level of confidence
z_score <- qnorm(1 - ((1 - confidence_level) / 2))
# Set the sample size
n <- nrow(abortion_data)
# Calculate the length of the confidence interval
CI_length <- z_score * sqrt((p * (1 - p)) / n)
# Output the length of the confidence interval
CI_length
n <- nrow(data)
p <- sum(data$abortion_legalize == "y")/n
# the critical value for a 95% level of confidence
df <- n - 1
alpha <- 0.05
cv <- qt(1 - alpha/2, df)
# the standard error
se <- sqrt(p*(1-p)/n)
# the length of the confidence interval
ci_length <- cv * se
# the result
ci_length
# the proportion of students who have life after death
prop_life_after_death <- sum(data$life_after_death == "y")/nrow(data)
# the proportion
cat("Proportion of students who have life after death:", prop_life_after_death, "\n")
# the length of the 90% confidence interval
conf = 90
z_value <- qnorm(conf/100 + (1-conf/100)/2)
length_ci <- z_value * sqrt((prop_life_after_death*(1-prop_life_after_death))/nrow(data))
# Print the length of the confidence interval
cat("Length of the 90% confidence interval:", length_ci)
length_ci
# Task #2
ab_legalize = data$abortion_legalize
legalize_num = length(data$ab_legalize[data$ab_legalize == 'y'])
legalize_prop = legalize_num / length(data$ab_legalize)
conf = 90
n = length(students$abortion_legalize)
z = qnorm(conf/100+(1-conf/100)/2)
conf = 90
n = length(data$abortion_legalize)
z = qnorm(conf/100+(1-conf/100)/2)
formula = z*(sqrt(legalize_prop*(1 - legalize_prop)) / sqrt(n))
(legalize_prop + formula) - (legalize_prop - formula)
formula = z*(sqrt(legalize_prop*(1 - legalize_prop)) / sqrt(n))
(legalize_prop + formula) - (legalize_prop - formula)
# Task #2
legalize = students$abortion_legalize
getwd()
students <- read.csv("fl_student_survey.csv")
students
# Task #2
legalize = students$abortion_legalize
legalize_num = length(students$abortion_legalize[students$abortion_legalize == 'y'])
legalize_prop = legalize_num / length(students$abortion_legalize)
confidence = 90
n = length(students$abortion_legalize)
z = qnorm(confidence/100+(1-confidence/100)/2)
formula = z*(sqrt(legalize_prop*(1 - legalize_prop)) / sqrt(n))
(legalize_prop + formula) - (legalize_prop - formula)
interval_length = (legalize_prop + formula) - (legalize_prop - formula)
interval_length
# Task #1
life_after_death = data$(life_after_death)
# Task #1
life_after_death = data$life_after_death
life_after_death_num = length(data$life_after_death[data$life_after_death == 'y'])
life_after_death_prop = life_after_death_num / length(data$life_after_death)
conf = 90
n = length(data$life_after_death)
z = qnorm(conf/100+(1-conf/100)/2)
formula = z*(sqrt(life_after_death_prop*(1 - life_after_death_prop)) / sqrt(n))
interval_length = (life_after_death_prop + formula) - (life_after_death_prop - formula)
interval_length
# Task #2
legalize = data$abortion_legalize
legalize_num = length(data$abortion_legalize[data$abortion_legalize == 'y'])
conf = 95
n = length(data$life_after_death)
z = qnorm(conf/100+(1-conf/100)/2)
formula = z*(sqrt(life_after_death_prop*(1 - life_after_death_prop)) / sqrt(n))
interval_length = (life_after_death_prop + formula) - (life_after_death_prop - formula)
interval_length
# Task #2
legalize = data$abortion_legalize
# Task 3
college_GPA = data$college_GPA
data$college_GPA
male_college_GPA = data$college_GPA[data$college_GPA == 'm']
male_college_GPA
# Subset the data to include only male students
male_data <- subset(data, gender == "m")
male_data
male_data
# Task 3
college_GPA = data$college_GPA
data$college_GPA
male_data <- subset(data, gender == "m")
sample_mean <- mean(male_data$college_GPA)
conf = 90
n = length(data$college_GPA)
z = qnorm(conf/100+(1-conf/100)/2)
formula = z*(sqrt(life_after_death_prop*(1 - life_after_death_prop)) / sqrt(n))
formula
# Task 3
college_GPA = data$college_GPA
data$college_GPA
male_data <- subset(data, gender == "m")
sample_mean <- mean(male_data$college_GPA)
conf = 90
n = length(data$college_GPA)
z = qnorm(conf/100+(1-conf/100)/2)
formula = z*(sqrt(college_GPA*(1 - college_GPA)) / sqrt(n))
formula
# Task 3
college_GPA = data$college_GPA
data$college_GPA
male_data <- subset(data, gender == "m")
sample_mean <- mean(male_data$college_GPA)
conf = 90
n = length(data$sample_mean)
z = qnorm(conf/100+(1-conf/100)/2)
formula = z*(sqrt(sample_mean*(1 - sample_mean)) / sqrt(n))
formula
#
confidence = 90
alpha = 1 - confidence / 100
n = length(data$abortion_legalize)
x = length(data[data$abortion_legalize == 'y',]$abortion_legalize)
p_hat = x / n
t_alpha_half = abs(qt(alpha/2, n-1))
l = t_alpha_half * sqrt((p_hat * (1 - p_hat)) / n)
l * 2
# Task 3
confidence = 90
# Task 3
confidence = 90
alpha = 1 - confidence / 100
n = length(data$high_sch_GPA)
s = sd(data$high_sch_GPA)
X_ = mean(data$high_sch_GPA)
t_alpha_half = abs(qt(alpha/2, n-1))
l = t_alpha_half * s / sqrt(n)
l
# Task 5
x <- c(2, 1, 7, 2, 3, 5)
lower_bound = 0.95
upper_bound = 6.05
mean(x)-lower_bound
l = (upper_bound - lower_bound)/2
n = 6
s = sd(x)
t_alpha_half = l / (s / sqrt(n))
1 - (1 - pt(t_alpha_half, n))*2
time_mean <- mean(data$sports)
sd <- sd(data$sports)
n <- length(data$sports)
t_value <- qt(0.925, df = n-1)
lower_limit <- time_mean - t_value * (sd / sqrt(n))
# Task 5
x <- c(2, 1, 7, 2, 3, 5)
lower_bound = 0.95
upper_bound = 6.05
mean(x)-lower_bound
alpha = 1 - confidence / 100
n = length(data$sports)
s = sd(data$sports)
X_ = mean(data$sports)
t_alpha_half = abs(qt(alpha/2, n-1))
res = t_alpha_half * s / sqrt(n)
final = X_ - res
# Task 5
x <- c(2, 1, 7, 2, 3, 5)
lower_bound = 0.95
upper_bound = 6.05
alpha = 1 - confidence / 100
n = length(data$sports)
s = sd(data$sports)
X_ = mean(data$sports)
t_alpha_half = abs(qt(alpha/2, n-1))
res = t_alpha_half * s / sqrt(n)
final = X_ - res
# Task 5
x <- c(2, 1, 7, 2, 3, 5)
lower_bound = 0.95
upper_bound = 6.05
alpha = 1 - confidence / 100
n = length(data$sports)
s = sd(data$sports)
X_ = mean(data$sports)
t_alpha_half = abs(qt(alpha/2, n-1))
res = t_alpha_half * s / sqrt(n)
final = X_ - res
final
# Task 5
x <- c(2, 1, 7, 2, 3, 5)
getwd()
data <- read.csv("Ch03_Tattoos.csv")
data
getwd()
Lister <- read.csv("Lister.csv")
Lister
Lister$Outcome.char <-
ifelse(
test = (Lister$Outcome == 1),
yes = "Survived",
no = "Did Not Survive"
)
Lister$Antiseptic.char <-
ifelse(
test = (Lister$Antiseptic == 1),
yes = "After Antiseptics",
no = "Before Antiseptics"
)
# relative frequency (the proportion of observations)
prop.table(table(Lister$Outcome.char))
getwd()
Lister <- read.csv("Lister.csv")
Lister
Lister$Outcome.char <-
ifelse(
test = (Lister$Outcome == 1),
yes = "Survived",
no = "Did Not Survive"
)
getwd()
Lister <- read.csv("Lister.csv")
library(ggplot2)
getwd()
data <- read.csv("Ch03_Tattoos.csv")
data
ggplot(data = data, aes(x = data$Location, y = , fill = data$Has_hepatitis_C)) +
geom_bar()
ggplot(data = data, aes(x = , y = , fill = data$Has_hepatitis_C)) +
geom_bar()
getwd()
data <- read.csv("Ch03_Tattoos.csv")
data
ggplot(data = data, aes(x = , y = , fill = data$Has_hepatitis_C)) +
geom_bar()
getwd()
data <- read.csv("Ch03_Tattoos.csv")
data
ggplot(data = data, aes(x = data$Location, y = , fill = data$Has_hepatitis_C)) +
geom_bar()
getwd()
data <- read.csv("Ch03_Tattoos.csv")
data
ggplot(data = data, aes(x = data$Location, y = 1.0, fill = data$Has_hepatitis_C)) +
geom_bar()
ggplot(data = data, aes(x = data$Location, y = , fill = data$Has_hepatitis_C)) +
geom_bar()
data
ggplot(data = data, aes(x = Location, y = , fill = data$Has_hepatitis_C)) +
geom_bar()
data
ggplot(data = data, aes(x = Location, y = , fill = Type)) +
geom_bar()
data
ggplot(data = data, aes(x = Location, y = , fill = type)) +
geom_bar()
ggplot(data = data, aes(x = Location, y = , fill = data$Has_hepatitis_C)) +
geom_bar()
ggplot(data = data, aes(x = Location, y = , fill = Yes/NO)) +
geom_bar()
data$Has_hepatitis_C
data$Has_hepatitis_C
ggplot(data = data, aes(x = Location, y = , fill = data$Has_hepatitis_C)) +
geom_bar()
ggplot(data = data, aes(x = Location, y = , fill = Has_hepatitis_C)) +
geom_bar()
ggplot(data = data, aes(x = Location, y = , fill = Has hepatitis C)) +
ggplot(data = data, aes(x = Location, y = , fill = Has hepatitis C)) +
_
data <- read.csv("Ch03_Tattoos.csv")
data
ggplot(data = data, aes(x = Location, y = , fill = Has_hepatitis_C)) +
geom_bar()
